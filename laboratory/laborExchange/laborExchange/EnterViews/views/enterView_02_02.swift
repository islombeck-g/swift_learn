//
//  enterView_02_02.swift
//  laborExchange
//
//  Created by Islombek Gofurov on 08.04.2023.
//

import SwiftUI



struct enterView_02_02: View {
    var addProgress:()-> Void

    @State public var selectedOption: String
    @State public var selectedUnivercity: String
    
    @State public var phoneNumber: String
    
   
    let cities = [
      "–ú–æ—Å–∫–≤–∞",
      "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥",
      "–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫",
      "–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥",
      "–ù–∏–∂–Ω–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥",
      "–ö–∞–∑–∞–Ω—å",
      "–ß–µ–ª—è–±–∏–Ω—Å–∫",
      "–û–º—Å–∫",
      "–°–∞–º–∞—Ä–∞",
      "–†–æ—Å—Ç–æ–≤-–Ω–∞-–î–æ–Ω—É",
      "–£—Ñ–∞",
      "–ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫",
      "–í–æ—Ä–æ–Ω–µ–∂",
      "–ü–µ—Ä–º—å",
      "–í–æ–ª–≥–æ–≥—Ä–∞–¥",
      "–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä",
      "–°–∞—Ä–∞—Ç–æ–≤",
      "–¢—é–º–µ–Ω—å",
      "–¢–æ–ª—å—è—Ç—Ç–∏",
      "–ò–∂–µ–≤—Å–∫",
      "–ë–∞—Ä–Ω–∞—É–ª",
      "–ò—Ä–∫—É—Ç—Å–∫",
      "–£–ª—å—è–Ω–æ–≤—Å–∫",
      "–•–∞–±–∞—Ä–æ–≤—Å–∫",
      "–Ø—Ä–æ—Å–ª–∞–≤–ª—å",
      "–í–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫",
      "–ú–∞—Ö–∞—á–∫–∞–ª–∞",
      "–¢–æ–º—Å–∫",
      "–û—Ä–µ–Ω–±—É—Ä–≥",
      "–ö–µ–º–µ—Ä–æ–≤–æ"
    ]
    let universities = [
        "–ö–∞–∑–∞–Ω—Å–∫–∏–π —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç",
        "–ú–æ—Å–∫–æ–≤—Å–∫–∏–π –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–π —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç –∏–º–µ–Ω–∏ –ú.–í. –õ–æ–º–æ–Ω–æ—Å–æ–≤–∞",
        "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥—Å–∫–∏–π –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–π —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç",
        "–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫–∏–π –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–π —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç",
        "–ú–æ—Å–∫–æ–≤—Å–∫–∏–π –∏–Ω—Å—Ç–∏—Ç—É—Ç —Ñ–∏–∑–∏–∫–∏ –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏",
        "–ú–æ—Å–∫–æ–≤—Å–∫–∏–π –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç –∏–º–µ–Ω–∏ –ù.–≠. –ë–∞—É–º–∞–Ω–∞",
        "–í—ã—Å—à–∞—è —à–∫–æ–ª–∞ —ç–∫–æ–Ω–æ–º–∏–∫–∏",
        "–¢–æ–º—Å–∫–∏–π –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–π —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç",
        "–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —è–¥–µ—Ä–Ω—ã–π —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç ¬´–ú–ò–§–ò¬ª",
        "–ö–∞–∑–∞–Ω—Å–∫–∏–π —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç",
        "–£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç –ò–¢–ú–û",
        "–ú–æ—Å–∫–æ–≤—Å–∫–∏–π –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Å—Ç–∏—Ç—É—Ç –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏–π",
        "–†–æ—Å—Å–∏–π—Å–∫–∏–π –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–π –≥—É–º–∞–Ω–∏—Ç–∞—Ä–Ω—ã–π —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç",
        "–£—Ä–∞–ª—å—Å–∫–∏–π —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç",
        "–î–∞–ª—å–Ω–µ–≤–æ—Å—Ç–æ—á–Ω—ã–π —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç",
        "–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç ¬´–ú–ò–°–∏–°¬ª",
        "–¢–æ–º—Å–∫–∏–π –ø–æ–ª–∏—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç",
        "–°–∏–±–∏—Ä—Å–∫–∏–π —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç",
        "–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –¢–æ–º—Å–∫–∏–π –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–π —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç",
        "–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç ¬´–ú–≠–ò¬ª",
        "–†–æ—Å—Å–∏–π—Å–∫–∏–π –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–π —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç –Ω–µ—Ñ—Ç–∏ –∏ –≥–∞–∑–∞ –∏–º–µ–Ω–∏ –ò.–ú. –ì—É–±–∫–∏–Ω–∞"
    ]
    var body: some View {
        GeometryReader{geometry in
            VStack{
                Text("–õ–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
                    .frame(width: geometry.size.width-20)
                    .font(.system(size: 28))
                    .multilineTextAlignment(.center)
                    .padding(.top)
                
                
                Group{
                    Menu{
                        ForEach(cities, id: \.self){
                            city in
                            Button{
                                selectedOption = city
                            }label: {
                                Text(city)
                                    .foregroundColor(.orange)
                                    
                            }
                        }
                    }label: {
                        Text(selectedOption)
                            .frame(width: geometry.size.width-50, height: 46)
                            .foregroundColor(.black)
                            .overlay(RoundedRectangle(cornerRadius: 10.0).strokeBorder(Color.black, style: StrokeStyle(lineWidth: 2.0)))
                            
                        
                    }
                    Menu{
                        ForEach(universities, id: \.self){
                            city in
                            Button{
                                selectedUnivercity = city
                            }label: {
                                Text(city)
                                    .foregroundColor(.orange)
                                    
                            }
                        }
                    }label: {
                        Text(selectedUnivercity)
                            .frame(width: geometry.size.width-50, height: 46)
                            .foregroundColor(.black)
                            .overlay(RoundedRectangle(cornerRadius: 10.0).strokeBorder(Color.black, style: StrokeStyle(lineWidth: 2.0)))
                }
                
                        
                    
                }
                
                Group{
                    HStack{
                        Text("üá∑üá∫ +7")
                            .frame(width: 80, height: 46)
                            .background(Color.secondary.opacity(0.2))
                            .cornerRadius(10)
                        TextField("–¢–µ–ª–µ—Ñ–æ–Ω*", text: $phoneNumber)
                        Spacer()
                    }
                    .frame(width: geometry.size.width-50, height: 46)
                    .overlay(RoundedRectangle(cornerRadius: 10.0).strokeBorder(Color.black, style: StrokeStyle(lineWidth: 2.0)))
                }
                
                
                
                
//
//                    .padding()
//                    .frame(width: geometry.size.width-50, height: 46)
//
//                    .padding(.horizontal)
                  
                
                
                Button{}label:{
                Text("–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç—å –∞–≤–∞—Ç–∞—Ä")
                    .frame(width: geometry.size.width-50, height: 46)
                    .background(Color.white)
                    .cornerRadius(13)
                    .foregroundColor(.black)
                    .overlay(RoundedRectangle(cornerRadius: 10.0).strokeBorder(Color.black, style: StrokeStyle(lineWidth: 2.0)))
            }
                
                
                Text("*–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ")
                    .position(x:110)
                    .frame(width: geometry.size.width-20, height: 20)
                    .padding(.top, 15)
                    .foregroundColor(.gray)
                
                
                Button(action: {
                    withAnimation {
                        addProgress()
                    }
                }) {
                    Text("–î–∞–ª–µ–µ")
                        .frame(width: geometry.size.width-50, height: 46)
                        .background(Color.black)
                        .cornerRadius(10)
                        .foregroundColor(.white)
                }
                .padding(.bottom, 20)
            }
            .background(.white, in: RoundedRectangle(cornerRadius: 25, style: .continuous))
            
        }
    }
}





//struct enterView_02_02_Previews: PreviewProvider {
//    static var previews: some View {
//        enterView_02_02()
//    }
//}
